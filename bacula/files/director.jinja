{%- from "bacula/map.jinja" import map with context -%}
#
# Bacula Director Main Configuration File for {{ dir_name }}
#
# Managed by Salt
#

Director {
  Name = {{ dir_name }}-dir
  DIRport = {{ dir_port }}
  Password = "{{ dir_pass }}"
  QueryFile = "{{ dir_query }}"
  WorkingDirectory = "{{ dir_work_dir }}"
  PidDirectory = "{{ dir_pid_dir }}"
  Maximum Concurrent Jobs = {{ dir_max_jobs }}
  Messages = {{ dir_messages }}
  Heartbeat Interval = {{ dir_hb_interval }}
}

#--- DB Catalog connection ---
# Generic catalog service
Catalog {
  Name = {{ cat_name }}
  DBName = "{{ cat_db_name }}"
  DB Address = {{ cat_db_address }}
  DBUser = {{ cat_db_user }}
  DBPassword = "{{ cat_db_password }}"  # used in mysql
}
#--- DB Catalog connection END ---

#--- Include clients config ---
# Include subfiles associated with configuration of clients.
# They define the bulk of the Clients, Jobs, and FileSets.
# Remember to "reload" the Director after adding a client file.
#
@|"sh -c 'for f in {{ config_dir }}/*.conf ; do echo @${f} ; done'"
#
#--- Include Clients config END ---

#--- Default restore Job ---
Job {
  Name = "{{ restJ_name }}"
  Type = {{ restJ_type }}
  Client = {{ restJ_client }}-restore-fd
  FileSet = "{{ restJ_fileset }}"
  Storage = {{ restJ_storage }}
  Pool = {{ restJ_pool }}
  Messages = {{ restJ_messages }}
  Where = "{{ restJ_where }}"
}

Pool {              # Not used in real restore
  Name = {{ restP_name }}
  Pool Type = {{ restP_type }}
  Recycle = {{ restP_rec }}
  AutoPrune = {{ restP_autoprune }}
  Volume Retention = {{ restP_ret }}
}

Client {            # dummy client connection
  Name = {{ restC_name }}-restore-fd
  Address = {{ restC_address }}
  FDPort = {{ restC_port }}
  Catalog = {{ restC_catalog }}
  Password = "{{ restC_password }}"
  File Retention = {{ restC_Fret }}
  Job Retention = {{ restC_Jret }}
  AutoPrune = {{ restC_autoprune }}
}

Storage {           # Not used in real restore but must be a real
  Name = {{ restS_name }}
  Address = {{ restS_address }}
  SDPort = {{ restS_port }}
  Password = "{{ restS_password }}"
  Device = FileStorage-{{ restS_dev }}
  Media Type = File-{{ restS_type }}
}

FileSet {           # Not used in real restore but must be a real
  Name = "{{ restFS_name }}"
  Include {
    Options {
      signature = MD5
    }
    File = /usr/sbin
  }
  Exclude {
  }
}
#--- Default restore Job  End ---

# Reasonable message delivery -- send most everything to email address
#  and to the console
Messages {
  Name = Standard

#
# NOTE! If you send to two email or more email addresses, you will need
#  to replace the %r in the from field (-f part) with a single valid
#  email address in both the mailcommand and the operatorcommand.
#  What this does is, it sets the email address that emails would display
#  in the FROM field, which is by default the same email as they're being
#  sent to.  However, if you send email to more than one address, then
#  you'll have to set the FROM address manually, to a single address.
#  for example, a 'no-reply@mydomain.com', is better since that tends to
#  tell (most) people that its coming from an automated source.

  mailcommand = "/usr/sbin/bsmtp -h {{ map.director.smtp_server }} -f \"\(Bacula\) \<%r\>\" -s \"Bacula: %t %e of %c %l %n\" %r"
  operatorcommand = "/usr/sbin/bsmtp -h {{ map.director.smtp_server }} -f \"\(Bacula\) \<%r\>\" -s \"Bacula: Intervention needed for %j\" %r"
  mail = {{ map.director.admin_email }}  = all, !skipped
  operator = root = mount
  console = all, !skipped, !saved

#
# WARNING! the following will create a file that you must cycle from
#          time to time as it will grow indefinitely. However, it will
#          also keep all your messages if they scroll off the console.
#
  append = "{{ map.director.logfile }}" = all, !skipped
  catalog = all
}

#
# Message delivery for daemon messages (no job).
Messages {
  Name = Daemon
  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula daemon message\" %r"
  mail = root = all, !skipped
  console = all, !skipped, !saved
  append = "/var/log/bacula/bacula.log" = all, !skipped
}

#
# Restricted console used by tray-monitor to get the status of the director
#
Console {
  Name = {{ mon_name }}-mon
  Password = "{{ mon_password }}"
  CommandACL = {{ mon_acl }}
}
